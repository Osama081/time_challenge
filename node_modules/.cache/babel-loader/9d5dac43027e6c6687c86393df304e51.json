{"ast":null,"code":"var _jsxFileName = \"C:\\\\REDUX\\\\simple_redux_application\\\\time_challenge\\\\src\\\\components\\\\ShowTodo.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport * as actions from \"./../store/actions/all_actions\";\nimport { connect } from \"react-redux\";\n\nconst ShowTodo = props => {\n  // console.log(props);\n  console.log(props);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-dark text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"#Sr\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"TODO\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"STATUS\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"DELETE\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, filterTodos(props.todos, props.filter).map((todo, index) => React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, index + 1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, todo.text), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    onClick: toggleTodo(index),\n    style: {\n      fontSize: \"25px\",\n      color: \"green\"\n    },\n    icon: todo.status ? faCheck : faTimes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    onClick: removeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Remove\")))))));\n};\n\nfunction removeTodo(index) {\n  window.store.dispatch({\n    type: actions.REMOVE_TO_DO,\n    index: index\n  });\n}\n\nfunction toggleTodo(index) {\n  window.store.dispatch({\n    type: actions.TOGGLE_TO_DO,\n    index: index\n  });\n}\n\nfunction filterTodos(todos, filter) {\n  switch (filter) {\n    case \"SHOW_ALL\":\n      return todos;\n\n    case \"COMPLETED\":\n      return todos.filter(todo => todo.status == true);\n\n    case \"NOT_COMPLETED:\":\n      return todos.filter(todo => todo.status == false);\n\n    default:\n      return todos;\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(ShowTodo);","map":{"version":3,"sources":["C:\\REDUX\\simple_redux_application\\time_challenge\\src\\components\\ShowTodo.jsx"],"names":["React","FontAwesomeIcon","faTimes","faCheck","actions","connect","ShowTodo","props","console","log","filterTodos","todos","filter","map","todo","index","text","toggleTodo","fontSize","color","status","removeTodo","window","store","dispatch","type","REMOVE_TO_DO","TOGGLE_TO_DO","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as actions from \"./../store/actions/all_actions\";\r\nimport { connect } from \"react-redux\";\r\nconst ShowTodo = props => {\r\n  // console.log(props);\r\n  console.log(props);\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"table table-dark text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>#Sr</th>\r\n            <th>TODO</th>\r\n            <th>STATUS</th>\r\n            <th>DELETE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filterTodos(props.todos, props.filter).map((todo, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{todo.text}</td>\r\n              <td>\r\n                {\r\n                  <FontAwesomeIcon\r\n                    onClick={toggleTodo(index)}\r\n                    style={{ fontSize: \"25px\", color: \"green\" }}\r\n                    icon={todo.status ? faCheck : faTimes}\r\n                  />\r\n                }\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={removeTodo(index)}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nfunction removeTodo(index) {\r\n  window.store.dispatch({ type: actions.REMOVE_TO_DO, index: index });\r\n}\r\nfunction toggleTodo(index) {\r\n  window.store.dispatch({ type: actions.TOGGLE_TO_DO, index: index });\r\n}\r\nfunction filterTodos(todos, filter) {\r\n  switch (filter) {\r\n    case \"SHOW_ALL\":\r\n      return todos;\r\n    case \"COMPLETED\":\r\n      return todos.filter(todo => todo.status == true);\r\n    case \"NOT_COMPLETED:\":\r\n      return todos.filter(todo => todo.status == false);\r\n    default:\r\n      return todos;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n};\r\nexport default connect(mapStateToProps)(ShowTodo);\r\n"]},"metadata":{},"sourceType":"module"}